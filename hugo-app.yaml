---
apiVersion: v1
kind: Namespace
metadata:
  name: hugo 
  labels:
    name: hugo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hugo
  namespace: hugo
  labels:
    app: hugo
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hugo-ingress
  namespace: hugo
  annotations:
    kubernetes.io/ingress.class: nginx-ingress-mma
    # kubernetes.io/tls-acme: "false"
    # ingress.kubernetes.io/ssl-redirect: "false"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  rules:
  - host: blog.clusterfukt.io 
    http:
      paths:
      - path: /
        backend:
          serviceName: hugo-svc
              #servicePort: 80
          servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: hugo-svc
  namespace: hugo
  labels:
    name: hugo-svc
    app: hugo
spec:
  selector:
    app: hugo
  type: ClusterIP
  ports:
  - name: https-svc
    port: 80
    targetPort: http-port
      #protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
  name: hugo-deployment
  namespace: hugo
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: hugo
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: hugo
    spec:
      containers:
      - name: hugo
        #yes the app is supposed to use latest
        image: registry.douglasinc.io:5000/hugo-test:v0.4
        imagePullPolicy: Always
        env:
        - name: USER
          value: yamama
        ports:
        - name: http-port
          containerPort: 80
